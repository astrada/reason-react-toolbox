// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var Index = require("react-css-themr/lib/index");
var Tab = require("react-toolbox/lib/tabs/Tab");
var Card = require("react-toolbox/lib/card/Card");
var Chip = require("react-toolbox/lib/chip/Chip");
var Link = require("react-toolbox/lib/link/Link");
var List = require("react-toolbox/lib/list/List");
var Menu = require("react-toolbox/lib/menu/Menu");
var Tabs = require("react-toolbox/lib/tabs/Tabs");
var Portal = require("react-toolbox/lib/hoc/Portal");
var Input = require("react-toolbox/lib/input/Input");
var Table = require("react-toolbox/lib/table/Table");
var Panel = require("react-toolbox/lib/layout/Panel");
var Avatar = require("react-toolbox/lib/avatar/Avatar");
var Button = require("react-toolbox/lib/button/Button");
var CardText = require("react-toolbox/lib/card/CardText");
var Dialog = require("react-toolbox/lib/dialog/Dialog");
var Drawer = require("react-toolbox/lib/drawer/Drawer");
var Layout = require("react-toolbox/lib/layout/Layout");
var IconMenu = require("react-toolbox/lib/menu/IconMenu");
var MenuItem = require("react-toolbox/lib/menu/MenuItem");
var Slider = require("react-toolbox/lib/slider/Slider");
var Switch = require("react-toolbox/lib/switch/Switch");
var AppBar = require("react-toolbox/lib/app_bar/AppBar");
var CardMedia = require("react-toolbox/lib/card/CardMedia");
var CardTitle = require("react-toolbox/lib/card/CardTitle");
var Sidebar = require("react-toolbox/lib/layout/Sidebar");
var TableRow = require("react-toolbox/lib/table/TableRow");
var Overlay = require("react-toolbox/lib/overlay/Overlay");
var TableCell = require("react-toolbox/lib/table/TableCell");
var TableHead = require("react-toolbox/lib/table/TableHead");
var TabContent = require("react-toolbox/lib/tabs/TabContent");
var CardActions = require("react-toolbox/lib/card/CardActions");
var NavDrawer = require("react-toolbox/lib/layout/NavDrawer");
var ListDivider = require("react-toolbox/lib/list/ListDivider");
var MenuDivider = require("react-toolbox/lib/menu/MenuDivider");
var RadioGroup = require("react-toolbox/lib/radio/RadioGroup");
var IconButton = require("react-toolbox/lib/button/IconButton");
var Checkbox = require("react-toolbox/lib/checkbox/Checkbox");
var Dropdown = require("react-toolbox/lib/dropdown/Dropdown");
var ListCheckbox = require("react-toolbox/lib/list/ListCheckbox");
var ListItemText = require("react-toolbox/lib/list/ListItemText");
var RadioButton = require("react-toolbox/lib/radio/RadioButton");
var Snackbar = require("react-toolbox/lib/snackbar/Snackbar");
var FontIcon = require("react-toolbox/lib/font_icon/FontIcon");
var ListSubHeader = require("react-toolbox/lib/list/ListSubHeader");
var BrowseButton = require("react-toolbox/lib/button/BrowseButton");
var ListItemAction = require("react-toolbox/lib/list/ListItemAction");
var ListItemLayout = require("react-toolbox/lib/list/ListItemLayout");
var ListItemActions = require("react-toolbox/lib/list/ListItemActions");
var ListItemContent = require("react-toolbox/lib/list/ListItemContent");
var Navigation = require("react-toolbox/lib/navigation/Navigation");
var DatePicker = require("react-toolbox/lib/date_picker/DatePicker");
var TimePicker = require("react-toolbox/lib/time_picker/TimePicker");
var ProgressBar = require("react-toolbox/lib/progress_bar/ProgressBar");
var Autocomplete = require("react-toolbox/lib/autocomplete/Autocomplete");

function unwrapValue(param) {
  if (param[0] >= 770676513) {
    throw [
          Caml_builtin_exceptions.assert_failure,
          [
            "ReactToolbox.re",
            14,
            16
          ]
        ];
  } else {
    return param[1];
  }
}

function optionMap(fn, option) {
  if (option) {
    return /* Some */[Curry._1(fn, option[0])];
  } else {
    return /* None */0;
  }
}

function make(theme, children) {
  return ReasonReact.wrapJsForReason(Index.ThemeProvider, {
              theme: theme
            }, children);
}

var ThemeProvider = /* module */[/* make */make];

function make$1(className, fixed, flat, leftIcon, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onLeftIconClick, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onRightIconClick, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, rightIcon, scrollHide, style, theme, title, children) {
  return ReasonReact.wrapJsForReason(AppBar.default, {
              className: Js_null_undefined.fromOption(className),
              fixed: Js_null_undefined.fromOption(fixed),
              flat: Js_null_undefined.fromOption(flat),
              leftIcon: Js_null_undefined.fromOption(leftIcon),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onLeftIconClick: Js_null_undefined.fromOption(onLeftIconClick),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onRightIconClick: Js_null_undefined.fromOption(onRightIconClick),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              rightIcon: Js_null_undefined.fromOption(rightIcon),
              scrollHide: Js_null_undefined.fromOption(scrollHide),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              title: Js_null_undefined.fromOption(title)
            }, children);
}

var AppBar$1 = /* module */[/* make */make$1];

function to_string(param) {
  switch (param) {
    case 0 : 
        return "auto";
    case 1 : 
        return "up";
    case 2 : 
        return "down";
    
  }
}

var Direction = /* module */[/* to_string */to_string];

function to_string$1(param) {
  switch (param) {
    case 0 : 
        return "above";
    case 1 : 
        return "below";
    case 2 : 
        return "none";
    
  }
}

var SelectedPosition = /* module */[/* to_string */to_string$1];

function to_string$2(param) {
  switch (param) {
    case 0 : 
        return "disabled";
    case 1 : 
        return "start";
    case 2 : 
        return "anywhere";
    case 3 : 
        return "word";
    
  }
}

var SuggestionMatch = /* module */[/* to_string */to_string$2];

function make$2(allowCreate, className, direction, disabled, error, floating, hint, icon, keepFocusOnChange, label, maxLength, multiline, multiple, name, onBlur, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onFocus, onKeyDown, onKeyPress, onKeyUp, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onQueryChange, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, required, rows, selectedPosition, showSelectedWhenNotInSource, showSuggestionsWhenValueIsSet, source, style, suggestionMatch, theme, _type, value, children) {
  return ReasonReact.wrapJsForReason(Autocomplete.default, {
              allowCreate: Js_null_undefined.fromOption(allowCreate),
              className: Js_null_undefined.fromOption(className),
              direction: Js_null_undefined.fromOption(optionMap(to_string, direction)),
              disabled: Js_null_undefined.fromOption(disabled),
              error: Js_null_undefined.fromOption(error),
              floating: Js_null_undefined.fromOption(floating),
              hint: Js_null_undefined.fromOption(hint),
              icon: Js_null_undefined.fromOption(icon),
              keepFocusOnChange: Js_null_undefined.fromOption(keepFocusOnChange),
              label: Js_null_undefined.fromOption(label),
              maxLength: Js_null_undefined.fromOption(maxLength),
              multiline: Js_null_undefined.fromOption(multiline),
              multiple: Js_null_undefined.fromOption(multiple),
              name: Js_null_undefined.fromOption(name),
              onBlur: Js_null_undefined.fromOption(onBlur),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onFocus: Js_null_undefined.fromOption(onFocus),
              onKeyDown: Js_null_undefined.fromOption(onKeyDown),
              onKeyPress: Js_null_undefined.fromOption(onKeyPress),
              onKeyUp: Js_null_undefined.fromOption(onKeyUp),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onQueryChange: Js_null_undefined.fromOption(onQueryChange),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              required: Js_null_undefined.fromOption(required),
              rows: Js_null_undefined.fromOption(rows),
              selectedPosition: Js_null_undefined.fromOption(optionMap(to_string$1, selectedPosition)),
              showSelectedWhenNotInSource: Js_null_undefined.fromOption(showSelectedWhenNotInSource),
              showSuggestionsWhenValueIsSet: Js_null_undefined.fromOption(showSuggestionsWhenValueIsSet),
              source: Js_null_undefined.fromOption(source),
              style: Js_null_undefined.fromOption(style),
              suggestionMatch: Js_null_undefined.fromOption(optionMap(to_string$2, suggestionMatch)),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(_type),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var Autocomplete$1 = /* module */[
  /* Direction */Direction,
  /* SelectedPosition */SelectedPosition,
  /* SuggestionMatch */SuggestionMatch,
  /* make */make$2
];

function make$3(className, cover, icon, image, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, title, children) {
  return ReasonReact.wrapJsForReason(Avatar.default, {
              className: Js_null_undefined.fromOption(className),
              cover: Js_null_undefined.fromOption(cover),
              icon: Js_null_undefined.fromOption(icon),
              image: Js_null_undefined.fromOption(image),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              title: Js_null_undefined.fromOption(title)
            }, children);
}

var Avatar$1 = /* module */[/* make */make$3];

function make$4(accent, className, disabled, flat, floating, href, icon, inverse, label, mini, neutral, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, primary, raised, ripple, style, theme, _type, children) {
  return ReasonReact.wrapJsForReason(BrowseButton.default, {
              accent: Js_null_undefined.fromOption(accent),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              flat: Js_null_undefined.fromOption(flat),
              floating: Js_null_undefined.fromOption(floating),
              href: Js_null_undefined.fromOption(href),
              icon: Js_null_undefined.fromOption(icon),
              inverse: Js_null_undefined.fromOption(inverse),
              label: Js_null_undefined.fromOption(label),
              mini: Js_null_undefined.fromOption(mini),
              neutral: Js_null_undefined.fromOption(neutral),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              primary: Js_null_undefined.fromOption(primary),
              raised: Js_null_undefined.fromOption(raised),
              ripple: Js_null_undefined.fromOption(ripple),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(_type)
            }, children);
}

var BrowseButton$1 = /* module */[/* make */make$4];

function make$5(accent, className, disabled, flat, floating, href, icon, inverse, label, mini, neutral, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, primary, raised, ripple, style, theme, _type, children) {
  return ReasonReact.wrapJsForReason(Button.default, {
              accent: Js_null_undefined.fromOption(accent),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              flat: Js_null_undefined.fromOption(flat),
              floating: Js_null_undefined.fromOption(floating),
              href: Js_null_undefined.fromOption(href),
              icon: Js_null_undefined.fromOption(icon),
              inverse: Js_null_undefined.fromOption(inverse),
              label: Js_null_undefined.fromOption(label),
              mini: Js_null_undefined.fromOption(mini),
              neutral: Js_null_undefined.fromOption(neutral),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              primary: Js_null_undefined.fromOption(primary),
              raised: Js_null_undefined.fromOption(raised),
              ripple: Js_null_undefined.fromOption(ripple),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(_type)
            }, children);
}

var Button$1 = /* module */[/* make */make$5];

function make$6(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, raised, style, theme, children) {
  return ReasonReact.wrapJsForReason(Card.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              raised: Js_null_undefined.fromOption(raised),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Card$1 = /* module */[/* make */make$6];

function make$7(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(CardActions.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var CardActions$1 = /* module */[/* make */make$7];

function to_string$3(param) {
  if (param) {
    return "square";
  } else {
    return "wide";
  }
}

var AspectRatio = /* module */[/* to_string */to_string$3];

function make$8(aspectRatio, className, color, contentOverlay, image, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(CardMedia.default, {
              aspectRatio: Js_null_undefined.fromOption(optionMap(to_string$3, aspectRatio)),
              className: Js_null_undefined.fromOption(className),
              color: Js_null_undefined.fromOption(color),
              contentOverlay: Js_null_undefined.fromOption(contentOverlay),
              image: Js_null_undefined.fromOption(image),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var CardMedia$1 = /* module */[
  /* AspectRatio */AspectRatio,
  /* make */make$8
];

function make$9(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(CardText.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var CardText$1 = /* module */[/* make */make$9];

function make$10(avatar, className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, subtitle, theme, title, children) {
  return ReasonReact.wrapJsForReason(CardTitle.default, {
              avatar: Js_null_undefined.fromOption(avatar),
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              subtitle: Js_null_undefined.fromOption(subtitle),
              theme: Js_null_undefined.fromOption(theme),
              title: Js_null_undefined.fromOption(title)
            }, children);
}

var CardTitle$1 = /* module */[/* make */make$10];

function make$11(checked, className, disabled, label, name, onBlur, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Checkbox.default, {
              checked: Js_null_undefined.fromOption(checked),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              label: Js_null_undefined.fromOption(label),
              name: Js_null_undefined.fromOption(name),
              onBlur: Js_null_undefined.fromOption(onBlur),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Checkbox$1 = /* module */[/* make */make$11];

function make$12(className, deletable, onClick, onContextMenu, onDeleteClick, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Chip.default, {
              className: Js_null_undefined.fromOption(className),
              deletable: Js_null_undefined.fromOption(deletable),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDeleteClick: Js_null_undefined.fromOption(onDeleteClick),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Chip$1 = /* module */[/* make */make$12];

function to_string$4(param) {
  switch (param) {
    case 0 : 
        return "de";
    case 1 : 
        return "no";
    case 2 : 
        return "en";
    case 3 : 
        return "es";
    case 4 : 
        return "af";
    case 5 : 
        return "ar";
    case 6 : 
        return "be";
    case 7 : 
        return "bg";
    case 8 : 
        return "bn";
    case 9 : 
        return "bo";
    case 10 : 
        return "br";
    case 11 : 
        return "bs";
    case 12 : 
        return "ca";
    case 13 : 
        return "gl";
    case 14 : 
        return "eu";
    case 15 : 
        return "pt";
    case 16 : 
        return "it";
    case 17 : 
        return "fr";
    case 18 : 
        return "ru";
    case 19 : 
        return "ua";
    case 20 : 
        return "zh-cn";
    case 21 : 
        return "zh-hk";
    case 22 : 
        return "zh-tw";
    
  }
}

var Locale = /* module */[/* to_string */to_string$4];

function make$13(active, autoOk, cancelLabel, className, disabledDates, enabledDates, error, icon, inputClassName, inputFormat, label, locale, maxDate, minDate, name, okLabel, onChange, onClick, onContextMenu, onDismiss, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onEscKeyDown, onKeyPress, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onOverlayClick, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, readonly, style, sundayFirstDayOfWeek, theme, value, children) {
  return ReasonReact.wrapJsForReason(DatePicker.default, {
              active: Js_null_undefined.fromOption(active),
              autoOk: Js_null_undefined.fromOption(autoOk),
              cancelLabel: Js_null_undefined.fromOption(cancelLabel),
              className: Js_null_undefined.fromOption(className),
              disabledDates: Js_null_undefined.fromOption(disabledDates),
              enabledDates: Js_null_undefined.fromOption(enabledDates),
              error: Js_null_undefined.fromOption(error),
              icon: Js_null_undefined.fromOption(icon),
              inputClassName: Js_null_undefined.fromOption(inputClassName),
              inputFormat: Js_null_undefined.fromOption(inputFormat),
              label: Js_null_undefined.fromOption(label),
              locale: Js_null_undefined.fromOption(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$4(x[1])
                                      ]);
                          }
                        }), locale)),
              maxDate: Js_null_undefined.fromOption(maxDate),
              minDate: Js_null_undefined.fromOption(minDate),
              name: Js_null_undefined.fromOption(name),
              okLabel: Js_null_undefined.fromOption(okLabel),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDismiss: Js_null_undefined.fromOption(onDismiss),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onEscKeyDown: Js_null_undefined.fromOption(onEscKeyDown),
              onKeyPress: Js_null_undefined.fromOption(onKeyPress),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onOverlayClick: Js_null_undefined.fromOption(onOverlayClick),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              readonly: Js_null_undefined.fromOption(readonly),
              style: Js_null_undefined.fromOption(style),
              sundayFirstDayOfWeek: Js_null_undefined.fromOption(sundayFirstDayOfWeek),
              theme: Js_null_undefined.fromOption(theme),
              value: Js_null_undefined.fromOption(optionMap(unwrapValue, value))
            }, children);
}

var DatePicker$1 = /* module */[
  /* Locale */Locale,
  /* make */make$13
];

function to_string$5(param) {
  switch (param) {
    case 0 : 
        return "small";
    case 1 : 
        return "normal";
    case 2 : 
        return "large";
    
  }
}

var Type = /* module */[/* to_string */to_string$5];

function make$14(actions, active, className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onEscKeyDown, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onOverlayClick, onOverlayMouseDown, onOverlayMouseMove, onOverlayMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, title, _type, children) {
  return ReasonReact.wrapJsForReason(Dialog.default, {
              actions: Js_null_undefined.fromOption(actions),
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onEscKeyDown: Js_null_undefined.fromOption(onEscKeyDown),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onOverlayClick: Js_null_undefined.fromOption(onOverlayClick),
              onOverlayMouseDown: Js_null_undefined.fromOption(onOverlayMouseDown),
              onOverlayMouseMove: Js_null_undefined.fromOption(onOverlayMouseMove),
              onOverlayMouseUp: Js_null_undefined.fromOption(onOverlayMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              title: Js_null_undefined.fromOption(title),
              type: Js_null_undefined.fromOption(optionMap((function (x) {
                          if (typeof x === "number" || x[0] !== 770676513) {
                            return unwrapValue(x);
                          } else {
                            return unwrapValue(/* `String */[
                                        -976970511,
                                        to_string$5(x[1])
                                      ]);
                          }
                        }), _type))
            }, children);
}

var Dialog$1 = /* module */[
  /* Type */Type,
  /* make */make$14
];

function to_string$6(param) {
  if (param) {
    return "right";
  } else {
    return "left";
  }
}

var Type$1 = /* module */[/* to_string */to_string$6];

function make$15(active, className, insideTree, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onOverlayClick, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, _type, withOverlay, children) {
  return ReasonReact.wrapJsForReason(Drawer.default, {
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              insideTree: Js_null_undefined.fromOption(insideTree),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onOverlayClick: Js_null_undefined.fromOption(onOverlayClick),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(optionMap(to_string$6, _type)),
              withOverlay: Js_null_undefined.fromOption(withOverlay)
            }, children);
}

var Drawer$1 = /* module */[
  /* Type */Type$1,
  /* make */make$15
];

function make$16(allowBlank, auto, className, disabled, error, label, name, onBlur, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onFocus, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, required, source, style, template, theme, value, children) {
  return ReasonReact.wrapJsForReason(Dropdown.default, {
              allowBlank: Js_null_undefined.fromOption(allowBlank),
              auto: Js_null_undefined.fromOption(auto),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              error: Js_null_undefined.fromOption(error),
              label: Js_null_undefined.fromOption(label),
              name: Js_null_undefined.fromOption(name),
              onBlur: Js_null_undefined.fromOption(onBlur),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onFocus: Js_null_undefined.fromOption(onFocus),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              required: Js_null_undefined.fromOption(required),
              source: source,
              style: Js_null_undefined.fromOption(style),
              template: Js_null_undefined.fromOption(template),
              theme: Js_null_undefined.fromOption(theme),
              value: Js_null_undefined.fromOption(optionMap(unwrapValue, value))
            }, children);
}

var Dropdown$1 = /* module */[/* make */make$16];

function make$17(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, value, children) {
  return ReasonReact.wrapJsForReason(FontIcon.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var FontIcon$1 = /* module */[/* make */make$17];

function make$18(accent, className, disabled, href, icon, inverse, neutral, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, primary, ripple, style, theme, _type, children) {
  return ReasonReact.wrapJsForReason(IconButton.default, {
              accent: Js_null_undefined.fromOption(accent),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              href: Js_null_undefined.fromOption(href),
              icon: Js_null_undefined.fromOption(icon),
              inverse: Js_null_undefined.fromOption(inverse),
              neutral: Js_null_undefined.fromOption(neutral),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              primary: Js_null_undefined.fromOption(primary),
              ripple: Js_null_undefined.fromOption(ripple),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(_type)
            }, children);
}

var IconButton$1 = /* module */[/* make */make$18];

function to_string$7(param) {
  switch (param) {
    case 0 : 
        return "auto";
    case 1 : 
        return "static";
    case 2 : 
        return "topLeft";
    case 3 : 
        return "topRight";
    case 4 : 
        return "bottomLeft";
    case 5 : 
        return "bottomRight";
    
  }
}

var Position = /* module */[/* to_string */to_string$7];

function make$19(className, icon, iconRipple, menuRipple, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onHide, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onSelect, onShow, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, position, selectable, selected, style, theme, children) {
  return ReasonReact.wrapJsForReason(IconMenu.default, {
              className: Js_null_undefined.fromOption(className),
              icon: Js_null_undefined.fromOption(icon),
              iconRipple: Js_null_undefined.fromOption(iconRipple),
              menuRipple: Js_null_undefined.fromOption(menuRipple),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onHide: Js_null_undefined.fromOption(onHide),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onSelect: Js_null_undefined.fromOption(onSelect),
              onShow: Js_null_undefined.fromOption(onShow),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              position: Js_null_undefined.fromOption(optionMap(to_string$7, position)),
              selectable: Js_null_undefined.fromOption(selectable),
              selected: Js_null_undefined.fromOption(selected),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var IconMenu$1 = /* module */[
  /* Position */Position,
  /* make */make$19
];

function make$20(className, disabled, error, floating, hint, icon, label, maxLength, multiline, name, onBlur, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onFocus, onKeyDown, onKeyPress, onKeyUp, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, required, rows, style, theme, _type, value, children) {
  return ReasonReact.wrapJsForReason(Input.default, {
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              error: Js_null_undefined.fromOption(error),
              floating: Js_null_undefined.fromOption(floating),
              hint: Js_null_undefined.fromOption(hint),
              icon: Js_null_undefined.fromOption(icon),
              label: Js_null_undefined.fromOption(label),
              maxLength: Js_null_undefined.fromOption(maxLength),
              multiline: Js_null_undefined.fromOption(multiline),
              name: Js_null_undefined.fromOption(name),
              onBlur: Js_null_undefined.fromOption(onBlur),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onFocus: Js_null_undefined.fromOption(onFocus),
              onKeyDown: Js_null_undefined.fromOption(onKeyDown),
              onKeyPress: Js_null_undefined.fromOption(onKeyPress),
              onKeyUp: Js_null_undefined.fromOption(onKeyUp),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              required: Js_null_undefined.fromOption(required),
              rows: Js_null_undefined.fromOption(rows),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(_type),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var Input$1 = /* module */[/* make */make$20];

function make$21(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Layout.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Layout$1 = /* module */[/* make */make$21];

function make$22(active, className, count, href, icon, label, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Link.default, {
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              count: Js_null_undefined.fromOption(count),
              href: Js_null_undefined.fromOption(href),
              icon: Js_null_undefined.fromOption(icon),
              label: Js_null_undefined.fromOption(label),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Link$1 = /* module */[/* make */make$22];

function make$23(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, ripple, selectable, style, theme, children) {
  return ReasonReact.wrapJsForReason(List.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              ripple: Js_null_undefined.fromOption(ripple),
              selectable: Js_null_undefined.fromOption(selectable),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var List$1 = /* module */[/* make */make$23];

function make$24(caption, checked, className, disabled, legend, name, onBlur, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onFocus, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(ListCheckbox.default, {
              caption: Js_null_undefined.fromOption(caption),
              checked: Js_null_undefined.fromOption(checked),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              legend: Js_null_undefined.fromOption(legend),
              name: Js_null_undefined.fromOption(name),
              onBlur: Js_null_undefined.fromOption(onBlur),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onFocus: Js_null_undefined.fromOption(onFocus),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var ListCheckbox$1 = /* module */[/* make */make$24];

function make$25(className, inset, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(ListDivider.default, {
              className: Js_null_undefined.fromOption(className),
              inset: Js_null_undefined.fromOption(inset),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var ListDivider$1 = /* module */[/* make */make$25];

function make$26(action, theme, children) {
  return ReasonReact.wrapJsForReason(ListItemAction.default, {
              action: Js_null_undefined.fromOption(action),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var ListItemAction$1 = /* module */[/* make */make$26];

function to_string$8(param) {
  if (param) {
    return "right";
  } else {
    return "left";
  }
}

var Type$2 = /* module */[/* to_string */to_string$8];

function make$27(theme, _type, children) {
  return ReasonReact.wrapJsForReason(ListItemActions.default, {
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(optionMap(to_string$8, _type))
            }, children);
}

var ListItemActions$1 = /* module */[
  /* Type */Type$2,
  /* make */make$27
];

function to_string$9(param) {
  switch (param) {
    case 0 : 
        return "auto";
    case 1 : 
        return "normal";
    case 2 : 
        return "large";
    
  }
}

var Type$3 = /* module */[/* to_string */to_string$9];

function make$28(caption, legend, theme, _type, children) {
  return ReasonReact.wrapJsForReason(ListItemContent.default, {
              caption: Js_null_undefined.fromOption(caption),
              legend: Js_null_undefined.fromOption(legend),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(optionMap(to_string$9, _type))
            }, children);
}

var ListItemContent$1 = /* module */[
  /* Type */Type$3,
  /* make */make$28
];

function make$29(avatar, caption, className, disabled, itemContent, leftActions, leftIcon, legend, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, rightActions, rightIcon, selectable, style, theme, _to, children) {
  return ReasonReact.wrapJsForReason(ListItemLayout.default, {
              avatar: Js_null_undefined.fromOption(optionMap(unwrapValue, avatar)),
              caption: Js_null_undefined.fromOption(caption),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              itemContent: Js_null_undefined.fromOption(itemContent),
              leftActions: Js_null_undefined.fromOption(leftActions),
              leftIcon: Js_null_undefined.fromOption(optionMap(unwrapValue, leftIcon)),
              legend: Js_null_undefined.fromOption(legend),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              rightActions: Js_null_undefined.fromOption(rightActions),
              rightIcon: Js_null_undefined.fromOption(optionMap(unwrapValue, rightIcon)),
              selectable: Js_null_undefined.fromOption(selectable),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              to: Js_null_undefined.fromOption(_to)
            }, children);
}

var ListItemLayout$1 = /* module */[/* make */make$29];

function make$30(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, primary, style, theme, children) {
  return ReasonReact.wrapJsForReason(ListItemText.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              primary: Js_null_undefined.fromOption(primary),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var ListItemText$1 = /* module */[/* make */make$30];

function make$31(caption, className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(ListSubHeader.default, {
              caption: Js_null_undefined.fromOption(caption),
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var ListSubHeader$1 = /* module */[/* make */make$31];

function to_string$10(param) {
  switch (param) {
    case 0 : 
        return "auto";
    case 1 : 
        return "static";
    case 2 : 
        return "topLeft";
    case 3 : 
        return "topRight";
    case 4 : 
        return "bottomLeft";
    case 5 : 
        return "bottomRight";
    
  }
}

var Position$1 = /* module */[/* to_string */to_string$10];

function make$32(active, className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onHide, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onSelect, onShow, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, outline, position, ripple, selectable, selected, style, theme, children) {
  return ReasonReact.wrapJsForReason(Menu.default, {
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onHide: Js_null_undefined.fromOption(onHide),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onSelect: Js_null_undefined.fromOption(onSelect),
              onShow: Js_null_undefined.fromOption(onShow),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              outline: Js_null_undefined.fromOption(outline),
              position: Js_null_undefined.fromOption(optionMap(to_string$10, position)),
              ripple: Js_null_undefined.fromOption(ripple),
              selectable: Js_null_undefined.fromOption(selectable),
              selected: Js_null_undefined.fromOption(selected),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Menu$1 = /* module */[
  /* Position */Position$1,
  /* make */make$32
];

function make$33(className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(MenuDivider.default, {
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var MenuDivider$1 = /* module */[/* make */make$33];

function make$34(caption, className, disabled, icon, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, selected, shortcut, style, theme, children) {
  return ReasonReact.wrapJsForReason(MenuItem.default, {
              caption: caption,
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              icon: Js_null_undefined.fromOption(icon),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              selected: Js_null_undefined.fromOption(selected),
              shortcut: Js_null_undefined.fromOption(shortcut),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var MenuItem$1 = /* module */[/* make */make$34];

function to_string$11(param) {
  switch (param) {
    case 0 : 
        return "sm";
    case 1 : 
        return "smTablet";
    case 2 : 
        return "md";
    case 3 : 
        return "lg";
    case 4 : 
        return "lgTablet";
    case 5 : 
        return "xl";
    case 6 : 
        return "xxl";
    case 7 : 
        return "xxxl";
    
  }
}

var PermanentAt = /* module */[/* to_string */to_string$11];

function to_string$12(param) {
  if (param) {
    return "right";
  } else {
    return "left";
  }
}

var Type$4 = /* module */[/* to_string */to_string$12];

function make$35(active, className, clipped, insideTree, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onOverlayClick, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, permanentAt, pinned, style, theme, _type, withOverlay, children) {
  return ReasonReact.wrapJsForReason(NavDrawer.default, {
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              clipped: Js_null_undefined.fromOption(clipped),
              insideTree: Js_null_undefined.fromOption(insideTree),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onOverlayClick: Js_null_undefined.fromOption(onOverlayClick),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              permanentAt: Js_null_undefined.fromOption(optionMap(to_string$11, permanentAt)),
              pinned: Js_null_undefined.fromOption(pinned),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(optionMap(to_string$12, _type)),
              withOverlay: Js_null_undefined.fromOption(withOverlay)
            }, children);
}

var NavDrawer$1 = /* module */[
  /* PermanentAt */PermanentAt,
  /* Type */Type$4,
  /* make */make$35
];

function to_string$13(param) {
  if (param) {
    return "horizontal";
  } else {
    return "vertical";
  }
}

var Type$5 = /* module */[/* to_string */to_string$13];

function make$36(actions, className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, routes, style, theme, _type, children) {
  return ReasonReact.wrapJsForReason(Navigation.default, {
              actions: Js_null_undefined.fromOption(actions),
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              routes: Js_null_undefined.fromOption(routes),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(optionMap(to_string$13, _type))
            }, children);
}

var Navigation$1 = /* module */[
  /* Type */Type$5,
  /* make */make$36
];

function make$37(active, className, invisible, onClick, onEscKeyDown, theme, children) {
  return ReasonReact.wrapJsForReason(Overlay.default, {
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              invisible: Js_null_undefined.fromOption(invisible),
              onClick: Js_null_undefined.fromOption(onClick),
              onEscKeyDown: Js_null_undefined.fromOption(onEscKeyDown),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Overlay$1 = /* module */[/* make */make$37];

function make$38(bodyScroll, className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Panel.default, {
              bodyScroll: Js_null_undefined.fromOption(bodyScroll),
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Panel$1 = /* module */[/* make */make$38];

function make$39(className, container, lockBody, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, children) {
  return ReasonReact.wrapJsForReason(Portal.default, {
              className: Js_null_undefined.fromOption(className),
              container: Js_null_undefined.fromOption(container),
              lockBody: Js_null_undefined.fromOption(lockBody),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style)
            }, children);
}

var Portal$1 = /* module */[/* make */make$39];

function to_string$14(param) {
  if (param) {
    return "indeterminate";
  } else {
    return "determinate";
  }
}

var Mode = /* module */[/* to_string */to_string$14];

function to_string$15(param) {
  if (param) {
    return "circular";
  } else {
    return "linear";
  }
}

var Type$6 = /* module */[/* to_string */to_string$15];

function make$40(buffer, className, disabled, max, min, mode, multicolor, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, _type, value, children) {
  return ReasonReact.wrapJsForReason(ProgressBar.default, {
              buffer: Js_null_undefined.fromOption(buffer),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              max: Js_null_undefined.fromOption(max),
              min: Js_null_undefined.fromOption(min),
              mode: Js_null_undefined.fromOption(optionMap(to_string$14, mode)),
              multicolor: Js_null_undefined.fromOption(multicolor),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(optionMap(to_string$15, _type)),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var ProgressBar$1 = /* module */[
  /* Mode */Mode,
  /* Type */Type$6,
  /* make */make$40
];

function make$41(checked, className, disabled, label, name, onBlur, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onFocus, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, value, children) {
  return ReasonReact.wrapJsForReason(RadioButton.default, {
              checked: Js_null_undefined.fromOption(checked),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              label: Js_null_undefined.fromOption(label),
              name: Js_null_undefined.fromOption(name),
              onBlur: Js_null_undefined.fromOption(onBlur),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onFocus: Js_null_undefined.fromOption(onFocus),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var RadioButton$1 = /* module */[/* make */make$41];

function make$42(className, disabled, name, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, value, children) {
  return ReasonReact.wrapJsForReason(RadioGroup.default, {
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              name: Js_null_undefined.fromOption(name),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var RadioGroup$1 = /* module */[/* make */make$42];

function to_string$16(param) {
  switch (param) {
    case 0 : 
        return "sm";
    case 1 : 
        return "smTablet";
    case 2 : 
        return "md";
    case 3 : 
        return "lg";
    case 4 : 
        return "lgTablet";
    case 5 : 
        return "xl";
    case 6 : 
        return "xxl";
    case 7 : 
        return "xxxl";
    
  }
}

var PermanentAt$1 = /* module */[/* to_string */to_string$16];

function to_string$17(param) {
  if (param) {
    return "right";
  } else {
    return "left";
  }
}

var Type$7 = /* module */[/* to_string */to_string$17];

function make$43(active, className, clipped, insideTree, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onOverlayClick, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, permanentAt, pinned, style, theme, _type, width, withOverlay, children) {
  return ReasonReact.wrapJsForReason(Sidebar.default, {
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              clipped: Js_null_undefined.fromOption(clipped),
              insideTree: Js_null_undefined.fromOption(insideTree),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onOverlayClick: Js_null_undefined.fromOption(onOverlayClick),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              permanentAt: Js_null_undefined.fromOption(optionMap(to_string$16, permanentAt)),
              pinned: Js_null_undefined.fromOption(pinned),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              type: Js_null_undefined.fromOption(optionMap(to_string$17, _type)),
              width: Js_null_undefined.fromOption(width),
              withOverlay: Js_null_undefined.fromOption(withOverlay)
            }, children);
}

var Sidebar$1 = /* module */[
  /* PermanentAt */PermanentAt$1,
  /* Type */Type$7,
  /* make */make$43
];

function make$44(buffer, className, disabled, editable, max, min, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDragStop, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, pinned, snaps, step, style, theme, value, children) {
  return ReasonReact.wrapJsForReason(Slider.default, {
              buffer: Js_null_undefined.fromOption(buffer),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              editable: Js_null_undefined.fromOption(editable),
              max: Js_null_undefined.fromOption(max),
              min: Js_null_undefined.fromOption(min),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDragStop: Js_null_undefined.fromOption(onDragStop),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              pinned: Js_null_undefined.fromOption(pinned),
              snaps: Js_null_undefined.fromOption(snaps),
              step: Js_null_undefined.fromOption(step),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var Slider$1 = /* module */[/* make */make$44];

function to_string$18(param) {
  switch (param) {
    case 0 : 
        return "accept";
    case 1 : 
        return "cancel";
    case 2 : 
        return "warning";
    
  }
}

var Type$8 = /* module */[/* to_string */to_string$18];

function make$45(action, active, className, label, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTimeout, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, timeout, _type, children) {
  return ReasonReact.wrapJsForReason(Snackbar.default, {
              action: Js_null_undefined.fromOption(action),
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              label: Js_null_undefined.fromOption(label),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTimeout: Js_null_undefined.fromOption(onTimeout),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme),
              timeout: Js_null_undefined.fromOption(timeout),
              type: Js_null_undefined.fromOption(optionMap(to_string$18, _type))
            }, children);
}

var Snackbar$1 = /* module */[
  /* Type */Type$8,
  /* make */make$45
];

function make$46(checked, className, disabled, label, name, onBlur, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onFocus, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Switch.default, {
              checked: Js_null_undefined.fromOption(checked),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              label: Js_null_undefined.fromOption(label),
              name: Js_null_undefined.fromOption(name),
              onBlur: Js_null_undefined.fromOption(onBlur),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onFocus: Js_null_undefined.fromOption(onFocus),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Switch$1 = /* module */[/* make */make$46];

function make$47(active, activeClassName, className, disabled, hidden, icon, label, onActive, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Tab.default, {
              active: Js_null_undefined.fromOption(active),
              activeClassName: Js_null_undefined.fromOption(activeClassName),
              className: Js_null_undefined.fromOption(className),
              disabled: Js_null_undefined.fromOption(disabled),
              hidden: Js_null_undefined.fromOption(hidden),
              icon: Js_null_undefined.fromOption(icon),
              label: label,
              onActive: Js_null_undefined.fromOption(onActive),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Tab$1 = /* module */[/* make */make$47];

function make$48(active, className, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, tabIndex, theme, children) {
  return ReasonReact.wrapJsForReason(TabContent.default, {
              active: Js_null_undefined.fromOption(active),
              className: Js_null_undefined.fromOption(className),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              tabIndex: Js_null_undefined.fromOption(tabIndex),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var TabContent$1 = /* module */[/* make */make$48];

function make$49(className, multiSelectable, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onRowSelect, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, selectable, style, theme, children) {
  return ReasonReact.wrapJsForReason(Table.default, {
              className: Js_null_undefined.fromOption(className),
              multiSelectable: Js_null_undefined.fromOption(multiSelectable),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onRowSelect: Js_null_undefined.fromOption(onRowSelect),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              selectable: Js_null_undefined.fromOption(selectable),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Table$1 = /* module */[/* make */make$49];

function to_string$19(param) {
  if (param) {
    return "desc";
  } else {
    return "asc";
  }
}

var Sorted = /* module */[/* to_string */to_string$19];

function to_string$20(param) {
  if (param) {
    return "th";
  } else {
    return "td";
  }
}

var TagName = /* module */[/* to_string */to_string$20];

function make$50(className, column, numeric, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, row, sorted, style, tagName, theme, children) {
  return ReasonReact.wrapJsForReason(TableCell.default, {
              className: Js_null_undefined.fromOption(className),
              column: Js_null_undefined.fromOption(column),
              numeric: Js_null_undefined.fromOption(numeric),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              row: Js_null_undefined.fromOption(row),
              sorted: Js_null_undefined.fromOption(optionMap(to_string$19, sorted)),
              style: Js_null_undefined.fromOption(style),
              tagName: Js_null_undefined.fromOption(optionMap(to_string$20, tagName)),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var TableCell$1 = /* module */[
  /* Sorted */Sorted,
  /* TagName */TagName,
  /* make */make$50
];

function make$51(className, displaySelect, multiSelectable, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onSelect, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, selectable, selected, style, theme, children) {
  return ReasonReact.wrapJsForReason(TableHead.default, {
              className: Js_null_undefined.fromOption(className),
              displaySelect: Js_null_undefined.fromOption(displaySelect),
              multiSelectable: Js_null_undefined.fromOption(multiSelectable),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onSelect: Js_null_undefined.fromOption(onSelect),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              selectable: Js_null_undefined.fromOption(selectable),
              selected: Js_null_undefined.fromOption(selected),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var TableHead$1 = /* module */[/* make */make$51];

function make$52(className, idx, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onSelect, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, selectable, selected, style, theme, children) {
  return ReasonReact.wrapJsForReason(TableRow.default, {
              className: Js_null_undefined.fromOption(className),
              idx: Js_null_undefined.fromOption(idx),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onSelect: Js_null_undefined.fromOption(onSelect),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              selectable: Js_null_undefined.fromOption(selectable),
              selected: Js_null_undefined.fromOption(selected),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var TableRow$1 = /* module */[/* make */make$52];

function to_string$21(param) {
  if (param) {
    return "unmounted";
  } else {
    return "display";
  }
}

var HideMode = /* module */[/* to_string */to_string$21];

function make$53(className, disableAnimatedBottomBorder, fixed, hideMode, index, inverse, onChange, onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit, onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave, onMouseMove, onMouseOut, onMouseOver, onMouseUp, onTouchCancel, onTouchEnd, onTouchMove, onTouchStart, style, theme, children) {
  return ReasonReact.wrapJsForReason(Tabs.default, {
              className: Js_null_undefined.fromOption(className),
              disableAnimatedBottomBorder: Js_null_undefined.fromOption(disableAnimatedBottomBorder),
              fixed: Js_null_undefined.fromOption(fixed),
              hideMode: Js_null_undefined.fromOption(optionMap(to_string$21, hideMode)),
              index: Js_null_undefined.fromOption(index),
              inverse: Js_null_undefined.fromOption(inverse),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onContextMenu: Js_null_undefined.fromOption(onContextMenu),
              onDoubleClick: Js_null_undefined.fromOption(onDoubleClick),
              onDrag: Js_null_undefined.fromOption(onDrag),
              onDragEnd: Js_null_undefined.fromOption(onDragEnd),
              onDragEnter: Js_null_undefined.fromOption(onDragEnter),
              onDragExit: Js_null_undefined.fromOption(onDragExit),
              onDragLeave: Js_null_undefined.fromOption(onDragLeave),
              onDragOver: Js_null_undefined.fromOption(onDragOver),
              onDragStart: Js_null_undefined.fromOption(onDragStart),
              onDrop: Js_null_undefined.fromOption(onDrop),
              onMouseDown: Js_null_undefined.fromOption(onMouseDown),
              onMouseEnter: Js_null_undefined.fromOption(onMouseEnter),
              onMouseLeave: Js_null_undefined.fromOption(onMouseLeave),
              onMouseMove: Js_null_undefined.fromOption(onMouseMove),
              onMouseOut: Js_null_undefined.fromOption(onMouseOut),
              onMouseOver: Js_null_undefined.fromOption(onMouseOver),
              onMouseUp: Js_null_undefined.fromOption(onMouseUp),
              onTouchCancel: Js_null_undefined.fromOption(onTouchCancel),
              onTouchEnd: Js_null_undefined.fromOption(onTouchEnd),
              onTouchMove: Js_null_undefined.fromOption(onTouchMove),
              onTouchStart: Js_null_undefined.fromOption(onTouchStart),
              style: Js_null_undefined.fromOption(style),
              theme: Js_null_undefined.fromOption(theme)
            }, children);
}

var Tabs$1 = /* module */[
  /* HideMode */HideMode,
  /* make */make$53
];

function to_string$22(param) {
  if (param) {
    return "ampm";
  } else {
    return "24hr";
  }
}

var Format = /* module */[/* to_string */to_string$22];

function make$54(active, cancelLabel, error, format, icon, inputClassName, label, okLabel, onChange, onClick, onDismiss, onEscKeyDown, onKeyPress, onOverlayClick, readonly, theme, value, children) {
  return ReasonReact.wrapJsForReason(TimePicker.default, {
              active: Js_null_undefined.fromOption(active),
              cancelLabel: Js_null_undefined.fromOption(cancelLabel),
              error: Js_null_undefined.fromOption(error),
              format: Js_null_undefined.fromOption(optionMap(to_string$22, format)),
              icon: Js_null_undefined.fromOption(icon),
              inputClassName: Js_null_undefined.fromOption(inputClassName),
              label: Js_null_undefined.fromOption(label),
              okLabel: Js_null_undefined.fromOption(okLabel),
              onChange: Js_null_undefined.fromOption(onChange),
              onClick: Js_null_undefined.fromOption(onClick),
              onDismiss: Js_null_undefined.fromOption(onDismiss),
              onEscKeyDown: Js_null_undefined.fromOption(onEscKeyDown),
              onKeyPress: Js_null_undefined.fromOption(onKeyPress),
              onOverlayClick: Js_null_undefined.fromOption(onOverlayClick),
              readonly: Js_null_undefined.fromOption(readonly),
              theme: Js_null_undefined.fromOption(theme),
              value: Js_null_undefined.fromOption(value)
            }, children);
}

var TimePicker$1 = /* module */[
  /* Format */Format,
  /* make */make$54
];

exports.ThemeProvider = ThemeProvider;
exports.AppBar = AppBar$1;
exports.Autocomplete = Autocomplete$1;
exports.Avatar = Avatar$1;
exports.BrowseButton = BrowseButton$1;
exports.Button = Button$1;
exports.Card = Card$1;
exports.CardActions = CardActions$1;
exports.CardMedia = CardMedia$1;
exports.CardText = CardText$1;
exports.CardTitle = CardTitle$1;
exports.Checkbox = Checkbox$1;
exports.Chip = Chip$1;
exports.DatePicker = DatePicker$1;
exports.Dialog = Dialog$1;
exports.Drawer = Drawer$1;
exports.Dropdown = Dropdown$1;
exports.FontIcon = FontIcon$1;
exports.IconButton = IconButton$1;
exports.IconMenu = IconMenu$1;
exports.Input = Input$1;
exports.Layout = Layout$1;
exports.Link = Link$1;
exports.List = List$1;
exports.ListCheckbox = ListCheckbox$1;
exports.ListDivider = ListDivider$1;
exports.ListItemAction = ListItemAction$1;
exports.ListItemActions = ListItemActions$1;
exports.ListItemContent = ListItemContent$1;
exports.ListItemLayout = ListItemLayout$1;
exports.ListItemText = ListItemText$1;
exports.ListSubHeader = ListSubHeader$1;
exports.Menu = Menu$1;
exports.MenuDivider = MenuDivider$1;
exports.MenuItem = MenuItem$1;
exports.NavDrawer = NavDrawer$1;
exports.Navigation = Navigation$1;
exports.Overlay = Overlay$1;
exports.Panel = Panel$1;
exports.Portal = Portal$1;
exports.ProgressBar = ProgressBar$1;
exports.RadioButton = RadioButton$1;
exports.RadioGroup = RadioGroup$1;
exports.Sidebar = Sidebar$1;
exports.Slider = Slider$1;
exports.Snackbar = Snackbar$1;
exports.Switch = Switch$1;
exports.Tab = Tab$1;
exports.TabContent = TabContent$1;
exports.Table = Table$1;
exports.TableCell = TableCell$1;
exports.TableHead = TableHead$1;
exports.TableRow = TableRow$1;
exports.Tabs = Tabs$1;
exports.TimePicker = TimePicker$1;
/* ReasonReact Not a pure module */
